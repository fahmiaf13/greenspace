generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["multiSchema"]
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Owner {
  id       String   @id @default(uuid())
  username String   @unique 
  password String 
  email    String   @unique
  role     String
  // reservations Reservation[]
}

model Relawan {
  id       String   @id @default(uuid())
  username String   @unique 
  password String 
  email    String   @unique
  role     String
  // reservations Reservation[]
}

model Admin {
  id       String   @id @default(uuid())
  username String   @unique 
  password String 
  email    String   @unique
  role     String
  // reservations Reservation[]
}

// model Officer {
//   id       String   @id @default(uuid())
//   username String   @unique 
//   password String
//   email    String   @unique
//   role     String
//   reservations Reservation[]
// }

// model ParkingSpot {
//   id        Int      @id @default(autoincrement())
//   location  String?
//   dateTime  DateTime? 
//   available Boolean @default(true)
//   reservations Reservation[]
// }

// model Reservation {
//   id          Int       @id @default(autoincrement())
//   userId      String
//   officerId   String?
//   spotId      Int
//   startTime   DateTime
//   endTime     DateTime
//   status      String    
//   createdAt   DateTime    @default(now())
//   updatedAt   DateTime    @updatedAt
//   User        User        @relation(fields: [userId], references: [id])
//   ParkingSpot ParkingSpot @relation(fields: [spotId], references: [id])
//   Officers    Officer?     @relation(fields: [officerId], references: [id])
// }


